## https://github.com/adelf/idea-php-dotenv-plugin/
## https://github.com/theskumar/python-dotenv - load_dotenv() mete .env -> os.getenv(): Se usa con: os.getenv().
#          Tiene:
#               a) Tiene CLI para actualizar (También se podría usar el CLI y no usar el API).
#     Usa: POSIX variable expansion https://pubs.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html
#     Variables replaced (no default expansion):
#          1º: Environment
#          2º: Other values in .env file if not in Environment
## https://github.com/sloria/environs - read_env() mete .env en -> os.environ (busca hacia arriba si no encuentra): Se usa con: su objeto env.bool("DEBUG"),
#          Tiene:
#               a) supported types: env.list(), env.dict(), env.json(), env.url(), env.path(), env.str(), env.log_level(), etc.
#               b) serialization: genera dictionary env.dump()
#               c) customer parser: env.furl(), etc. lo que se quiera, o sea, igual YAML?
#
#          No se (que el otro si que lo dice):
#               a) que pasa si hay conflicto (misma en .env y en environment)
#               b) si se puede usar expansión en el .env para environemnt o para las que hay en el propio fichero

[secrets]
MAC_PASSWD=ffff
PASSWD=1Zaragoza$.
PASSWD_ENCODED=1Zaragoza%24%2E
ROOT=project
ANSIBLE_CONFIG=${HOME}/${ROOT}
VULTR_API_KEY=WPGEC6ZGFJI7RHXX4JYO7WDAFEMRMK3PQ3VA
[paths]

VAR=2
PREFFIX=PRE
A=30
FALLBACK=8
SSH_PORT=50000
DOCKER_PORT=54000
SWARM_PORT=10000
B=2
LISTA=a b c
OTRA_LISTA=d,f,f
OTRA_LISTA_2=${HOME},f,f

MAIL_SERVER=vu1
MAIL_PORT=9000
MAIL_PROTO=tcp
HOME=${HOME}
